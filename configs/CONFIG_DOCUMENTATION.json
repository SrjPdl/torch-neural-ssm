{
  // File: CONFIG_DOCUMENTATION.JSON
  // Description: not a runnable .json file, but a description of the arguments the model can take in and
  // and what the default parameters and types are for each.

  // Experiment ID and Checkpoint to Load
  "exptype": "str (default=testing): experiment folder name",
  "model_path": "str (default=''): path to the experiments folder",
  "checkpt": "str (default=''): checkpoint name to use",
  "accelerator": "str (default='gpu') whether to use cpu, gpu, tpu",
  "devices": "list (default=[0]): which gpu devices to use",
  "num_workers": "int (default=0): how many workers for DataLoaders",

  // Defining which model and model version to use
  "model": "str (default=none): choice of latent dynamics function",
  "system_identification": "bool (default=false): whether to use (True) system identification or (False) state estimation model versions. note that some baselines ignore this parameter and are fixed",
  "stochastic": "bool (default=false): whether the dynamics parameters are stochastic",

  // Metrics to evaluate on
  "metrics": "list (default=['vpt', 'dst', 'vpd', 'reconstruction_mse', 'extrapolation_mse']): which metrics to use",

  // ODE Integration parameters
  "integrator": "str (default=rk4): which ODE integrator to use",
  "integrator_params": "dict (default={'step_size': 0.5}): ODE integrator options in dictionary format",

  // Dataset-to-use parameters
  "dataset": "str (default=pendulum): dataset folder name",
  "dataset_percent": "float (default=1.0): percent of the dataset to use",
  "batches_to_save": "int (default=50): how many batches' outputs to output for metrics per epoch",
  "save_files": "bool (default=true): whether to save input data and predictions in each experiment folder"

  // Learning parameters
  "num_epochs": "int (default=100): how many epochs to train over",
  "batch_size": "int (default=32): size of batch",

  // Learning rate parameters
  "learning_rate": "float (default=1e-3): initial learning rate",
  "use_scheduker": "bool (default=true): whether to use the LR scheduler or not",
  "scheduler": {
    "restart_interval": "int (default=32500): how many steps inbetween warm scheduler restarts",
    "warmup_steps": "int (default=200): how many linear warmup steps to use",
    "decay": "float (default=0.9): warm restart max decay over time"
  },

  // Tuning parameters
  "betas": {
    "z0": "float (default=1e-2): beta of the kl term for z0",
    "kl": "float (default=1e-3): beta of the kl term for the dynamics loss"
  },

  // Input dimensions
  "dim": "int (default=32): dimension of the input data, assuming square images",
  "num_channel": "int (default=1): number of image color channels",

  // Network dimensions
  "latent_dim": "int (default=3): size of the latent vector field",
  "latent_act": "string (default=swish): type of activation function in the dynamics function per utils.py",
  "num_layers": "int (default=2): number of layers in the dynamics function",
  "num_hidden": "int (default=128): number of neurons per layer in the dynamics function",
  "num_filt": "int (default=8): number of filters used in the first layer of the CNNs. Multiplies by two per layer.",

  // Z0 inference parameters
  "z_amort": "int (default=5): how many frames of observation given to use in z0 inference",

  // Timesteps to generate out
  "gen_len": {
    "varying": "bool (default=false): whether to vary the generation length per batch",
    "train": "int (default=15): total number of timesteps to generate out and train on (including z_amort)",
    "val": "int (default=30): how many timesteps to generate out in validation metrics",
    "test": "int (default=30): how many timesteps to generate out in testing metrics"
  }
}